// Copyright 2024 EchoTech. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Autogenerated from Pigeon (v20.0.2), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import <Foundation/Foundation.h>

@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, MediaType) {
  MediaTypeAudio = 0,
  MediaTypeFile = 1,
  MediaTypeVideo = 2,
  MediaTypeImage = 3,
};

/// Wrapper for MediaType to allow for nullability.
@interface MediaTypeBox : NSObject
@property(nonatomic, assign) MediaType value;
- (instancetype)initWithValue:(MediaType)value;
@end

@class SaveItemMessage;
@class SaveToResult;

@interface SaveItemMessage : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithMediaType:(MediaType)mediaType
    name:(nullable NSString *)name
    filePath:(NSString *)filePath
    saveDirectoryPath:(NSString *)saveDirectoryPath
    saveFilePath:(nullable NSString *)saveFilePath
    description:(nullable NSString *)description
    mimeType:(nullable NSString *)mimeType;
@property(nonatomic, assign) MediaType mediaType;
@property(nonatomic, copy, nullable) NSString * name;
@property(nonatomic, copy) NSString * filePath;
@property(nonatomic, copy) NSString * saveDirectoryPath;
@property(nonatomic, copy, nullable) NSString * saveFilePath;
@property(nonatomic, copy, nullable) NSString * description;
@property(nonatomic, copy, nullable) NSString * mimeType;
@end

@interface SaveToResult : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithSuccess:(BOOL )success
    message:(NSString *)message;
@property(nonatomic, assign) BOOL  success;
@property(nonatomic, copy) NSString * message;
@end

/// The codec used by all APIs.
NSObject<FlutterMessageCodec> *nullGetPigeonCodec(void);

@protocol SaveToHostApi
/// @return `nil` only when `error != nil`.
- (nullable SaveToResult *)saveSaveItem:(SaveItemMessage *)saveItem error:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void SetUpSaveToHostApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<SaveToHostApi> *_Nullable api);

extern void SetUpSaveToHostApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<SaveToHostApi> *_Nullable api, NSString *messageChannelSuffix);

NS_ASSUME_NONNULL_END
